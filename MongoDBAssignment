 Storage layer assignment (MySQL and MongoDB)	


1) Display all the information of the EMP table?
   MySQL:   select * from emp;
   MongoDB: db.emp.find({ });

2) Display unique Jobs from EMP table?
   MySQL:   select distinct(job ) from emp;
   MongoDB: db.emp.find({},{"distinct(job)": 1 });

3) List the emps in the asc order of their Salaries?
   MySQL:   select * from emp order by sal asc;
   MongoDB: db.emporder by sal asc.find({}).sort({"sal": 1});

4) List the details of the emps in asc order of the Dptnos and desc of Jobs?
   MySQL:   select * from emp order by deptno asc, job desc;
   MongoDB:  db.emporder by deptno asc, job desc.find({}).sort({"deptno": -1});

5) Display all the unique job groups in the descending order?
   MySQL:    select distinct (job) from emp order by job desc;
   MongoDB:  db.emporder by job desc.find({},{  "distinct(job)": 1}).sort({"job": -1});

6) Display all the details of all ‘Mgrs’
   MySQL:   select * from emp where job='manager';
   MongoDB: db.emp.find({"job" : 'manager'});

7) List the emps who joined before 1981
   MySQL: select * from emp where hiredate <('1981-1-1'); 
   MongoDB:  db.emp.find({"hiredate ":{ "$lt" : ('1981-1-1' }});

8) List the Empno, Ename, Sal, Daily sal of all emps in the asc order of Annsal
   MySQL:  select empno,ename,sal, sal/30 as dailysal, sal*12 as annsal from emp order by annsal asc;
  MongoDB:   db.emporder by annsal asc.find({ },{
   	 "empno": 1,
	 "ename": 1,
  	 "sal": 1,
 	 "sal/30asdailysal": 1,
  	 "sal*12asannsal": 1
	}
	).sort({ "annsal": 1});


9) Display the Empno, Ename, job, Hiredate, Exp of all Mgrs
   MySQL: select empno,ename,job,hiredate, timestampdiff(year,hiredate,curdate()) exp from emp where in(select mgr from emp);
   MongoDB:   db.emp.find({
	"": {"$in": [select mgr from emp}
	},{
 	  "empno": 1,
	  "ename": 1,
	  "job": 1,
	  "hiredate": 1,
	  "timestampdiff(year": 1,
	  "hiredate": 1,
   	  "curdate())exp": 1
	}
	);

10) List the Empno, Ename, Sal, Exp of all emps working for Mgr 7369
    MySQL: select empno,ename,sal,exp from emp where mgr = 7369; 	 
    MongoDB:      db.emp.find({
	 "mgr " :  7369
	},{
 	  "empno": 1,
  	  "ename": 1,
 	  "sal": 1,
	  "exp": 1
	}
	);

11) Display all the details of the emps whose Comm  Is more than their Sal
    mySQL:     select * from emp where comm > sal; 
    MongoDB:      db.emp.find({
	 "$where": "this.comm  > this. sal"
	});
	
13) List the emps along with their Exp and Daily Sal is more than Rs 100
    MySQL: select * from emp where (sal/30) >100;
    mongoDB:       db.emp.find({
	  "sal/30) ":{ "$gt" : 100 }
	 });

14) List the emps who are either ‘CLERK’ or ‘ANALYST’ in the Desc order
    MySQL: select * from emp where job = ‘CLERK’ or job = ‘ANALYST’ order by job desc;
         MongoDB: db.emp.find({

   	"$or": [{
   	 "$where": "this.job  == this. ‘CLERK’ "
	 },{ "$where": "this.job  == this. ‘ANALYST’ "
 	  }]
	}).sort({
	 "job": -1
	});

15) List the emps who joined on 1-MAY-81,3-DEC-81,17-DEC-81,19-JAN-80 in asc order of seniority
   mySQL: select * from emp where hiredate in (’01-may-81’,’03-dec-81’,’17-dec81’,’19-jan-80’) order by hiredate asc; 
  mongoDB:  db.emp.find({
 	  "hiredate": {"$in":  [’01-may-81’,’03-dec-81’,’17-dec81’,’19-jan-80’] }
	   }).sort({
	  "hiredate": 1
	 });

16) List the emp who are working for the Deptno 10 or20
  mySQL: select * from emp where deptno = 10 or deptno = 20 ;
 mongodb: db.emp.find({

   	 "$or": [{
	 "deptno " :  10 
	 },{ "deptno " :  20 
 	  }]
	});

17) List the emps who are joined in the year 81
  MySQL: select * from emp where hiredate between ’01-jan-81’ and ’31-dec-81’; 
 MongoDB: db.emp.find({

	 "$and": [{"hiredate " :{$gt:’01-jan-81’ }},{"hiredate ":{$lt:’31-dec-81’}}}]
	});

19) List the emps Who Annual sal ranging from 22000 and 45000
  MySQL: select * from emp where 12*sal between 22000 and 45000;
  mongodb: db.emp.find ($and:[{"sal" :{$gt:22000 }},{"sal":{$lt:45000}}])

20) List the Enames those are having five characters in their Names
 Mysql: select ename from emp where length (ename) = 5;
Mpngob:  db.emp.find({
	 "length (ename) " :  5
	 },{
 	 "ename": 1
	 }
 	 );

21) List the Enames those are starting with ‘S’ and with five characters
 MySQL:  select ename from emp where ename like ‘S%’ and length (ename) = 5;
 Mongodb: db.emp.find({

 	 "$and": [{
  	 "$where": "this.ename  == this. ‘S%’ "
	 },{ " length (ename) " :  5
	 }]
	 },{
 	 "ename": 1
	 }
	 );

22) List the emps those are having four chars and third character must be ‘r’
 MySQl: select * from emp where length(ename) = 4 and ename like ‘__R%’;
 MongoDb: db.emp.find({

  	 "$and": [{
  	 "length(ename) " :  4 
	  },{ "$where": "this. ename  == this. ‘__R%’"
 	  }]
	  });

23) List the Five character names starting with ‘S’ and ending with ‘H’
 MySQL: select * from emp where length(ename) = 5 and ename like ‘S%H’; 
 MongoDB: db.emp.find({

 	 "$and": [{
	 "length(ename) " :  5 
	 },{ "$where": "this. ename  == this. ‘S%H’"
	 }]
	});

24) List the emps who joined in January
  MySQL: select * from emp where to_char (hiredate,’mon’) = ‘jan’; 
  MongoDB: db.emp.find({
	 "$where": "this.to_char (hiredate,’mon’)  == this. ‘jan’"
	 });	
 
27) List the emps whose names having a character set ‘ll’ together
    MySQL:  select * from emp where ename like ‘%LL%’; 
    MongoDB: db.emp.find({
	 "$where": "this.ename  == this. ‘%LL%’"
	 });

29) List the emps who does not belong to Deptno 20
   MySQL: select * from emp where deptno != 20;
   MongoDb: db.emp.find({
	 "deptno " : { "$ne":  20}
	 });

30) List all the emps except ‘PRESIDENT’ & ‘MGR” in asc order of Salaries
  MySQL: Select * from emp where job not in (‘PRESIDENT’,’MANAGER’) order by sal asc;
 MongoDb: db.emp.find({
	 "jobnot ": {"$in":  [‘PRESIDENT’,’MANAGER’] }
	}).sort({
	 "sal": 1
	});

31) List the emps whose Empno not starting with digit78
 MySql: select * from emp where empno not like ‘78%’; 
MongoDb: db.emp.find({"empno not " :  ‘78%’});

33) List the emps who are working under ‘MGR’
  MySQL: select e.ename || ‘ works for ‘ || m.ename from emp e ,emp m where e.mgr =m.empno ;
 MongoDB:
      db.empe ,emp m .find({"$where": "this.e.mgr  == this.m.empno "},{"e.ename||‘worksfor‘||m.ename": 1});

34) List the emps who joined in any year but not belongs to the month of March
 MySQL:  select * from emp where to_char (hiredate,’MON’) not in (‘MAR’);
MongoDB: db.emp.find({"to_char(hiredate,’MON’) not ": {"$in":  [‘MAR’}});

35) List all the Clerks of Deptno 20
  MySQl: select * from emp where job =‘CLERK’ and deptno = 20; 
 mongoDb: db.emp.find({

 	 "$and": [{
         "$where": "this.job  == this.‘CLERK’ "
	 },{ " deptno " :  20
	 }]
	});

36) List the emps of Deptno 30 or 10 joined in the year 1981
 mysql: select * from emp where to_char (hiredate,’YYYY’) in (‘1981’) and (deptno = 30 or deptno =10 ) ;
 mongoDb: db.emp.find({ "$and": [{"to_char(hiredate,’YYYY’) ": {"$in":  [‘1981’] } 
    	},{
 	  "$or": [{
	  "deptno " :  30 
	 },{ "deptno " : 10 ) 
	   }]
	   }]
	});

37)  Display the details of SMITH
 Mysql: select *from emp where ename='smith';
  MongoDB:  db.emp.find({
	 "ename" : 'smith'
	 });

38) Display the location of SMITH
      MySQL: select loc from emp e , dept d where e.ename = ‘SMITH’ and e.deptno =d.deptno ; 

      MongoDb: db.empe , dept d .find({

 	"$and": [{
	"$where": "this.e.ename  == this. ‘SMITH’ "
	 },{ "$where": "this. e.deptno  == this.d.deptno "
	   }]
	},{
	   "loc": 1
	}
	);
